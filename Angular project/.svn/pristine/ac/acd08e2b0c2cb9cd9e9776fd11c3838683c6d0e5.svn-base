<!-- Page Header-->
<header class="page-header">
	<div class="container-fluid">
		<h2 class="no-margin-bottom">Vendor Assignment</h2>
	</div>
</header>

<section class="dashboard-header mb-0">
	<div class="container-fluid">
		<!-- <div class="row"> -->
		<div class="col-12">
			<div class="card">
				<div class="card-header">
					<h3>Select option</h3>
				</div>
				<div class="card-body">
					<form [formGroup]="entryPointForm">
						<div class="form-row container-fluid">
							<div class="col-md-6 mb-2">
								<div class="form-group">
									<input type="radio" name="dataEntryPoint" id="dataEntryPoint1" value="upload"
										formControlName="dataEntryPoint" class="checkbox-template">
									<label for="dataEntryPoint1">CSV File</label>
								</div>
							</div>
							<div class="col-md-6 mb-2">
								<div class="form-group">
									<input type="radio" name="dataEntryPoint" id="dataEntryPoint2" value="option"
										formControlName="dataEntryPoint" class="checkbox-template">
									<label for="dataEntryPoint2">Retail outlet list</label>
								</div>
							</div>
						</div>
					</form>
				</div>
			</div>
		</div>
		<!-- </div> -->
	</div>
</section>

<!-- Dashboard Counts Section-->

<div class="col-lg-12" [ngSwitch]="entryPointForm.value.dataEntryPoint">

	<!-- <section class="dashboard-counts no-padding-bottom" > -->
	<div class="container-fluid" *ngSwitchCase="'upload'">
		<div class="row">
			<div class="col-md-5 col-12">
				<div class="card">
					<div class="card-header">
						Upload CSV File
					</div>
					<div class="card-body ">
						<div class="btn btn-rounded btn-ioc btn-sm float-left">
							<span></span>
							<input type="file" class="form-control-file btn btn-ioc" accept=".csv"
								(change)="onFileSelect($event.target)">
						</div>
					</div>
				</div>
			</div>
			<div class="col-md-7 col-12">
				<div class="card">
					<div class="card-header">
						Sample CSV
					</div>
					<div class="card-body">
						<div class="form-group">
							<ol>
								<li>Sample file reference for upload of Vendor Assignment data</li>
								<li>Date format should be dd-mm-yyyy. for eg. 31-03-2019</li>
								<li>For Audit type "Regular", data should be R</li>
								<li>For Audit type "Cross-Verification", data should be C</li>
								<li>Audit quarter format should be "current year (hyphen) next year (forward slash) current quarter".
									for eg. 2018-2019/Q1</li>
								<li>File should be of format "CSV" (Comma Separated Values) only</li>
							</ol>
							<a class="btn btn-ioc" href="{{assetUrl}}/assets/sample/vendor-assign-data.csv"
								target="_blank">Download</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- </section> -->


	<div class="container-fluid" *ngSwitchCase="'option'">
		<div class="row">
			<div class="col-12">
				<app-mis-sel-off-archetype-phase [soList]="soDOSAList" [doList]="doList" [saList]="saList"
					[buttonDisable]="isWaiting" (soChange)="onSelectSalesOrg($event)" (doChange)="onSelectSalesOff($event)"
					(showReport)="onShowVendorAssignForm($event)"></app-mis-sel-off-archetype-phase>
			</div>
		</div>
	</div>

	<!-- Dashboard Header Section    -->
	<section class="dashboard-header" *ngSwitchCase="'option'">
		<div class="container-fluid">
			<div class="row" *ngIf="retailOutletSelectFormData.controls.length > 0 && !isWaiting">
				<div class="col-lg-12">
					<div class="card">
						<form (ngSubmit)="onSelectVendorAssignData()" [formGroup]="retailOutletSelectForm">
							<div class="card-header align-items-center">
								<h3 class="h4">Identified Retail Outlets<button data-target="#vendorAssignModal" data-toggle="modal"
										type="submit" class="btn btn-secondary btn-sm float-right">Proceed</button></h3>
							</div>
							<div class="card-body">
								<cdk-virtual-scroll-viewport style="height: 500px;width: 100%" itemSize="10">
									<!-- <div style="overflow-x: auto"> -->
									<table class="table table-striped table-hover">
										<thead>
											<tr>
												<th><input type="checkbox" name="selectAll" id="selectAll" class="checkbox-template" (change)="onSelectMultiple()"></th>
												<th>Sr. No.</th>
												<th>RO Code</th>
												<th>RO Name</th>
												<th>Archetype</th>
												<th>Phase</th>
											</tr>
										</thead>
										<tbody formArrayName="retailOutletDetails">
											<tr *ngFor="let retailOutletDetail of retailOutletSelectFormData.controls; let i = index;"
												[formGroupName]="i">
												<td><input type="checkbox" name="isSelected" id="isSelected" formControlName="isSelected"
														class="checkbox-template"></td>
												<td>{{i + 1}}</td>
												<td>{{retailOutletDetail.controls.roCode.value}}</td>
												<td>{{retailOutletDetail.controls.roName.value}}</td>
												<td>{{retailOutletDetail.controls.archetype.value}}</td>
												<td>{{retailOutletDetail.controls.phase.value}}</td>
											</tr>
										</tbody>
									</table>
									<!-- </div> -->
								</cdk-virtual-scroll-viewport>
							</div>
						</form>
					</div>
				</div>
			</div>
			<div class="row" *ngIf="retailOutletSelectFormData.controls.length == 0 && isReportRequested && !isWaiting">
				<div class="col-lg-12">
					<div class="card">
						<div class="card-header d-flex align-items-center">
							<h3 class="h4">Identified Retail Outlets</h3>
						</div>
						<div class="card-body">
							<h3 class="h4">Nothing Found for this request <span style="font-size: 25px">ðŸ˜¢</span></h3>
						</div>
					</div>
				</div>
			</div>
			<div class="row" *ngIf="retailOutletSelectFormData.controls.length == 0 && !isReportRequested && !isWaiting">
				<div class="col-lg-12">
					<div class="card">
						<div class="card-header d-flex align-items-center">
							<h3 class="h4">Identified Retail Outlets</h3>
						</div>
						<div class="card-body">
							<h3 class="h4">Press "Show" to Proceed</h3>
						</div>
					</div>
				</div>
			</div>
			<div class="row" *ngIf="isWaiting">
				<div class="col-lg-12">
					<div class="card">
						<div class="card-header d-flex align-items-center">
							<h3 class="h4">Identified Retail Outlets</h3>
						</div>
						<div class="card-body">
							<h3 class="h4">Please wait... Populating results :-)</h3>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="modal fade" id="vendorAssignModal" tabindex="-1" role="dialog" aria-labelledby="vendorAssignModalTitle"
			aria-hidden="true">
			<div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="vendorAssignModalTitle">Vendor Assignment</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<form (ngSubmit)="onSaveVendorAssignData()" [formGroup]="vendorAssignForm">
							<div class="form-group">
								<label for="vendorCode">Vendor Code:</label>
								<input type="text" minlength="8" id="vendorCode" class="form-control" formControlName="vendorCode"
									(keyup)="populateVendorDetails($event)"
									[ngClass]="{ 'is-invalid': submitted && f.vendorCode.errors }" />
								<small *ngIf="isLoading" id="vendorCodeHelp" class="form-text text-muted">Fetching details... please
									wait.</small>
								<div *ngIf="submitted && f.vendorCode.errors" class="invalid-feedback">
									<div *ngIf="f.vendorCode.errors.required">Vendor Code is required</div>
									<div *ngIf="f.vendorCode.errors.minlength">Vendor Code must be at least 8 digits</div>
									<div *ngIf="f.vendorCode.errors.pattern">Must be a number</div>
								</div>
							</div>
							<div class="form-group">
								<label for="vendorName">Name of the Vendor:</label>
								<input id="vendorName" class="form-control" formControlName="vendorName" readonly
									[ngClass]="{ 'is-invalid': submitted && f.vendorName.errors }" />
								<div *ngIf="submitted && f.vendorName.errors" class="invalid-feedback">
									<div *ngIf="f.vendorName.errors.required">Vendor code is invalid or not available</div>
								</div>
							</div>
							<div class="form-group">
								<label for="auditType">Audit Type:</label>
								<select id="auditType" class="form-control" formControlName="auditType"
									[ngClass]="{ 'is-invalid': submitted && f.auditType.errors }">
									<option value="" selected disabled>--Select--</option>
									<option value="R">Regular</option>
									<option value="C">Cross Verification</option>
								</select>
								<div *ngIf="submitted && f.auditType.errors" class="invalid-feedback">
									<div *ngIf="f.auditType.errors.required">Audit type is required</div>
								</div>
							</div>
							<div class="form-group">
								<label for="auditYear">Audit Year:</label>
								<select id="auditYear" class="form-control" formControlName="auditYear"
									[ngClass]="{ 'is-invalid': submitted && f.auditYear.errors }">
									<option value="" selected disabled>--Select--</option>
									<option *ngFor="let auditFinancialYear of auditFinancialYears" [value]="auditFinancialYear">
										{{auditFinancialYear}}</option>
								</select>
								<div *ngIf="submitted && f.auditYear.errors" class="invalid-feedback">
									<div *ngIf="f.auditYear.errors.required">Audit Year is required</div>
								</div>
							</div>
							<div class="form-group">
								<label for="auditQuarter">Audit Quarter:</label>
								<select id="auditQuarter" class="form-control" formControlName="auditQuarter"
									[ngClass]="{ 'is-invalid': submitted && f.auditQuarter.errors }">
									<option value="" selected disabled>--Select--</option>
									<option value="Q1">Q1</option>
									<option value="Q2">Q2</option>
									<option value="Q3">Q3</option>
									<option value="Q4">Q4</option>
								</select>
								<div *ngIf="submitted && f.auditQuarter.errors" class="invalid-feedback">
									<div *ngIf="f.auditQuarter.errors.required">Audit Quarter is required</div>
								</div>
							</div>
							<div class="form-row">
								<div class="form-group col-md-6">
									<label for="startDate">Start Date:</label>
									<input type="date" id="startDate" class="form-control" formControlName="startDate"
										[ngClass]="{ 'is-invalid': submitted && f.startDate.errors }" />
									<div *ngIf="submitted && f.startDate.errors" class="invalid-feedback">
										<div *ngIf="f.startDate.errors.required">Start Date is required</div>
										<div *ngIf="f.startDate.errors.pastDate">Start Date cannot be past dated</div>
										<div *ngIf="f.startDate.errors.mustComply">Start Date cannot be greater than End Date</div>
									</div>
								</div>
								<div class="form-group col-md-6">
									<label for="endDate">End Date:</label>
									<input type="date" id="endDate" class="form-control" formControlName="endDate"
										[ngClass]="{ 'is-invalid': submitted && f.endDate.errors }" />
									<div *ngIf="submitted && f.endDate.errors" class="invalid-feedback">
										<div *ngIf="f.endDate.errors.required">End Date is required</div>
										<div *ngIf="f.endDate.errors.pastDate">End Date cannot be past dated</div>
									</div>
								</div>
							</div>
							<div class="form-row">
								<div class="form-group col-md-6">
									<button type="button" class="btn btn-secondary btn-block" data-dismiss="modal">Close</button>
								</div>
								<div class="form-group col-md-6">
									<button type="submit" class="btn btn-primary btn-block"
										[disabled]="buttonDisable">{{buttonDisable ? 'Please Wait...' : 'Save details'}}</button>
								</div>
							</div>
						</form>
					</div>
					<div class="modal-footer justify-content-center">
						<h4>Total RO(s) selected: {{selectedRetailOutletList.length}}</h4>
					</div>
				</div>
			</div>
		</div>
	</section>
</div>

<!-- <section class="dashboard-counts no-padding-bottom"> -->

<!-- </section> -->
<p-toast [style]="{marginTop: '80px'}" styleClass="custom-toast" key="vendor-assign-option-status" [baseZIndex]="5000"
	position="bottom-center">
</p-toast>
<p-toast [style]="{marginTop: '80px'}" styleClass="custom-toast" key="vendor-assign-upload-progress"
	position="bottom-center" modal="true">
</p-toast>
<p-toast [style]="{marginTop: '80px'}" styleClass="custom-toast" key="vendor-assign-upload-status"
	position="bottom-center">
</p-toast>